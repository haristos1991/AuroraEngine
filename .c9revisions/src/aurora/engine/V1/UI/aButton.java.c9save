{"ts":1351281449872,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"/*\n * Copyright 2012 Sardonix Creative.\n *\n * This work is licensed under the \n * Creative Commons Attribution-NonCommercial-NoDerivs 3.0 Unported License.\n * To view a copy of this license, visit \n *\n *      http://creativecommons.org/licenses/by-nc-nd/3.0/\n *\n * or send a letter to Creative Commons, 444 Castro Street, Suite 900, \n * Mountain View, California, 94041, USA.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\npackage aurora.engine.V1.UI;\n\nimport aurora.engine.V1.Logic.aSurface;\nimport java.net.MalformedURLException;\nimport java.net.URL;\nimport java.util.logging.Level;\nimport java.util.logging.Logger;\nimport javax.swing.ImageIcon;\nimport javax.swing.JButton;\n\n/**\n * Extention of JButton to allow custom Image states (regardless of Look & Feel)\n *\n * @author Sammy\n * @version 0.2\n */\npublic class aButton extends JButton {\n\n    String urlNormal;\n    String urlOver;\n    String urlDown;\n    private ImageIcon btnNormal;\n    private ImageIcon btnOver;\n    private ImageIcon btnDown;\n    private int w;\n    private int h;\n    //////////////////////\n    ///  Constructor    //\n    //////////////////////\n    private aSurface ressource;\n\n    /**\n     * Sets up the imageIcons to be painted on button and allows a string to be\n     * placed on top of the button\n     *\n     * @param text\n     * @param ImgUp\n     * @param ImgDwn\n     * @param ImgOvr\n     *\n     */\n    public aButton(String text, String ImgUp, String ImgDwn, String ImgOvr) {\n        super(text);\n        this.urlNormal = ImgUp;\n        this.urlOver = ImgOvr;\n        this.urlDown = ImgDwn;\n        ressource = new aSurface(\"\");\n        try {\n            btnNormal = new ImageIcon(new URL(ressource.getSurfacePath() + \"/aurora/V1/resources/\" + ImgUp));\n            btnOver = new ImageIcon(new URL(ressource.getSurfacePath() + \"/aurora/V1/resources/\" + ImgOvr));\n            btnDown = new ImageIcon(new URL(ressource.getSurfacePath() + \"/aurora/V1/resources/\" + ImgDwn));\n\n        } catch (MalformedURLException ex) {\n            //Fallback\n            try {\n                btnNormal = new ImageIcon(getClass().getResource( \"/aurora/V1/resources/\" + ImgUp));\n                btnOver = new ImageIcon(getClass().getResource(\"/aurora/V1/resources/\" + ImgOvr));\n                btnDown = new ImageIcon(getClass().getResource( \"/aurora/V1/resources/\" + ImgDwn));\n            } catch (Exception exx) {\n                Logger.getLogger(aButton.class.getName()).log(Level.SEVERE, null, exx);\n            }\n        }\n\n        setButton();\n    }\n\n    /**\n     * Sets up the imageIcons to be painted on button and allows a string to be\n     * placed on top of the button\n     *\n     * @param name\n     * @param ImgUp\n     * @param ImgDwn\n     * @param ImgOvr\n     *\n     */\n    public aButton(String ImgUp, String ImgDwn, String ImgOvr) {\n        ressource = new aSurface(\"\");\n        this.urlNormal = ImgUp;\n        this.urlOver = ImgOvr;\n        this.urlDown = ImgDwn;\n        try {\n            btnNormal = new ImageIcon(new URL(ressource.getSurfacePath() + \"/aurora/V1/resources/\" + ImgUp));\n            btnOver = new ImageIcon(new URL(ressource.getSurfacePath() + \"/aurora/V1/resources/\" + ImgOvr));\n            btnDown = new ImageIcon(new URL(ressource.getSurfacePath() + \"/aurora/V1/resources/\" + ImgDwn));\n        } catch (MalformedURLException ex) {\n          try {\n                btnNormal = new ImageIcon(getClass().getResource( \"/aurora/V1/resources/\" + ImgUp));\n                btnOver = new ImageIcon(getClass().getResource(\"/aurora/V1/resources/\" + ImgOvr));\n                btnDown = new ImageIcon(getClass().getResource( \"/aurora/V1/resources/\" + ImgDwn));\n            } catch (Exception exx) {\n                Logger.getLogger(aButton.class.getName()).log(Level.SEVERE, null, exx);\n            }\n        }\n\n\n        setButton();\n    }\n\n    /**\n     * Sets up the imageIcons to be painted on button\n     *\n     * @param name\n     * @param ImgUp\n     * @param ImgDwn\n     * @param ImgOvr\n     *\n     */\n    public aButton(String ImgUp, String ImgDwn, String ImgOvr, int width, int height) {\n\n        this.w = width;\n        this.h = height;\n\n        ressource = new aSurface(\"\");\n\n        this.urlNormal = ImgUp;\n        this.urlOver = ImgOvr;\n        this.urlDown = ImgDwn;\n        try {\n            btnNormal = new ImageIcon(new URL(ressource.getSurfacePath() + \"/aurora/V1/resources/\" + ImgUp));\n            btnOver = new ImageIcon(new URL(ressource.getSurfacePath() + \"/aurora/V1/resources/\" + ImgOvr));\n            btnDown = new ImageIcon(new URL(ressource.getSurfacePath() + \"/aurora/V1/resources/\" + ImgDwn));\n        } catch (MalformedURLException ex) {\n            try {\n                btnNormal = new ImageIcon(getClass().getResource( \"/aurora/V1/resources/\" + ImgUp));\n                btnOver = new ImageIcon(getClass().getResource(\"/aurora/V1/resources/\" + ImgOvr));\n                btnDown = new ImageIcon(getClass().getResource( \"/aurora/V1/resources/\" + ImgDwn));\n            } catch (Exception exx) {\n                Logger.getLogger(aButton.class.getName()).log(Level.SEVERE, null, exx);\n            }\n        }\n\n\n\n\n\n        if (w == 0) {\n\n            w = btnNormal.getIconWidth();\n\n        }\n        if (h == 0) {\n            h = btnNormal.getIconHeight();\n        }\n        try {\n            //System.out.println(\"BUTTON \"  + ressource.getSurfacePath() + \"/aurora/V1/resources/\"+ urlDown);\n            btnDown.setImage(aImage.resizeBufferedImg((new ImageIcon(new URL(ressource.getSurfacePath() + \"/aurora/V1/resources/\" + urlDown)).getImage()), w, h));\n            btnOver.setImage(aImage.resizeBufferedImg((new ImageIcon(new URL(ressource.getSurfacePath() + \"/aurora/V1/resources/\" + urlOver)).getImage()), w, h));\n            btnNormal.setImage(aImage.resizeBufferedImg((new ImageIcon(new URL(ressource.getSurfacePath() + \"/aurora/V1/resources/\" + urlNormal)).getImage()), w, h));\n\n\n        } catch (MalformedURLException ex) {\n            try {\n                btnOver.setImage(aImage.resizeBufferedImg((new ImageIcon(getClass().getResource(\"/aurora/V1/resources/\" + urlOver)).getImage()), w, h));\n                btnNormal.setImage(aImage.resizeBufferedImg((new ImageIcon(getClass().getResource(\"/aurora/V1/resources/\" + urlNormal)).getImage()), w, h));\n                btnDown.setImage(aImage.resizeBufferedImg((new ImageIcon(getClass().getResource(\"/aurora/V1/resources/\" + urlDown)).getImage()), w, h));\n\n            } catch (Exception exx) {\n                Logger.getLogger(aButton.class.getName()).log(Level.SEVERE, null, exx);\n            }\n        }\n\n        setButton();\n    }\n\n    /**\n     * Prepares the button by setting the images to the proper states as well as\n     * setting the Button to fully transparent with no borders\n     *\n     */\n    private void setButton() {\n\n        //Resource Manager\n\n        ressource = new aSurface(\"\");\n\n        //set image states\n\n        this.setIcon(btnNormal);\n        this.setRolloverIcon(btnOver);\n        this.setSelectedIcon(btnDown);\n        this.setPressedIcon(btnDown);\n\n        //remove backround and borders\n        this.setBorderPainted(false);\n        this.setFocusPainted(false);\n        this.setOpaque(false);\n        this.setContentAreaFilled(false);\n    }\n\n    public void setButtonSize(int width, int height) {\n        this.w = width;\n        this.h = height;\n        try {\n            //btnOver.setImage(aImage.resizeImage((new ImageIcon(getClass().getResource(\"/aurora/V1/resources/\" + urlOver)).getImage()),w,h));\n            btnOver.setImage(aImage.resizeBufferedImg((new ImageIcon(new URL(ressource.getSurfacePath() + \"/aurora/V1/resources/\" + urlOver)).getImage()), w, h));\n            btnNormal.setImage(aImage.resizeBufferedImg((new ImageIcon(new URL(ressource.getSurfacePath() + \"/aurora/V1/resources/\" + urlNormal)).getImage()), w, h));\n            btnDown.setImage(aImage.resizeBufferedImg((new ImageIcon(new URL(ressource.getSurfacePath() + \"/aurora/V1/resources/\" + urlDown)).getImage()), w, h));\n\n        } catch (MalformedURLException ex) {\n            try {\n                btnOver.setImage(aImage.resizeBufferedImg((new ImageIcon(getClass().getResource(\"/aurora/V1/resources/\" + urlOver)).getImage()), w, h));\n                btnNormal.setImage(aImage.resizeBufferedImg((new ImageIcon(getClass().getResource(\"/aurora/V1/resources/\" + urlNormal)).getImage()), w, h));\n                btnDown.setImage(aImage.resizeBufferedImg((new ImageIcon(getClass().getResource(\"/aurora/V1/resources/\" + urlDown)).getImage()), w, h));\n\n            } catch (Exception exx) {\n                Logger.getLogger(aButton.class.getName()).log(Level.SEVERE, null, exx);\n            }\n        }\n\n    }\n}\n"]],"start1":0,"start2":0,"length1":0,"length2":8954}]],"length":8954}
